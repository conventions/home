package ${serviceImplPackage};

import com.jsf.conventions.model.ConventionsDataModel;
import com.jsf.conventions.service.impl.StatelessHibernateService;
import java.util.Map;
import javax.inject.Named;
import org.hibernate.criterion.DetachedCriteria;
import org.primefaces.model.SortOrder;
import ${entityPackage}.${entity};
import ${servicePackage}.${serviceName};

/**
 *
 */
@Named
public class ${serviceName}ServiceImpl extends StatefulHibernateService<${entity}, Long> implements ${serviceName}Service{

    #if($configFilters) 
	@Override
	 /**
     * use this method to change the default filtering behavior.
	 * the following rules will be used by default:
	 * 1 - for string fields will be added a hibernate ilike with machMode.Anywhere restriction
         * 2 - for integer fields will be added a hibernate eq restriction
	 * if you have other types of fields in your entity or if you want 
	 * to add other kind of restriction you must override this method
     */    
    public ConventionsDataModel<${entity}> configFindPaginated(int first, int pageSize, String sortField, SortOrder sortOrder, Map filters, Map externalFilter) {
        DetachedCriteria dc = getDao().getDetachedCriteria();
        if (externalFilter != null && !externalFilter.isEmpty()) {
            //external filter restrictions
        }
     
        /* config prime datatable filter columns */
        if (filters != null && !filters.isEmpty()) {
           
        }
        return hibernateDao.findPaginated(first, pageSize, sortField, sortOrder, dc);
    }
	#end
}